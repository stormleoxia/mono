# Makefile.in generated by automake 1.14.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/eglib
pkgincludedir = $(includedir)/eglib
pkglibdir = $(libdir)/eglib
pkglibexecdir = $(libexecdir)/eglib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-cygwin
host_triplet = i686-pc-mingw32
target_triplet = i686-pc-mingw32
noinst_PROGRAMS = test-eglib$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/../mkinstalldirs $(top_srcdir)/../depcomp README
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 = test_eglib-test.$(OBJEXT) test_eglib-driver.$(OBJEXT) \
	test_eglib-hashtable.$(OBJEXT) \
	test_eglib-string-util.$(OBJEXT) test_eglib-string.$(OBJEXT) \
	test_eglib-slist.$(OBJEXT) test_eglib-sizes.$(OBJEXT) \
	test_eglib-ptrarray.$(OBJEXT) test_eglib-list.$(OBJEXT) \
	test_eglib-array.$(OBJEXT) test_eglib-fake.$(OBJEXT) \
	test_eglib-path.$(OBJEXT) test_eglib-queue.$(OBJEXT) \
	test_eglib-shell.$(OBJEXT) test_eglib-spawn.$(OBJEXT) \
	test_eglib-timer.$(OBJEXT) test_eglib-file.$(OBJEXT) \
	test_eglib-pattern.$(OBJEXT) test_eglib-dir.$(OBJEXT) \
	test_eglib-markup.$(OBJEXT) test_eglib-unicode.$(OBJEXT) \
	test_eglib-utf8.$(OBJEXT) test_eglib-endian.$(OBJEXT) \
	test_eglib-module.$(OBJEXT) test_eglib-memory.$(OBJEXT)
am_test_eglib_OBJECTS = $(am__objects_1)
test_eglib_OBJECTS = $(am_test_eglib_OBJECTS)
am__DEPENDENCIES_1 =
test_eglib_DEPENDENCIES = ../src/libeglib.la $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
test_eglib_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_eglib_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
DIST_SOURCES = $(test_eglib_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /cygdrive/e/mono2/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = i686-pc-mingw32-ar
AUTOCONF = ${SHELL} /cygdrive/e/mono2/missing autoconf
AUTOHEADER = ${SHELL} /cygdrive/e/mono2/missing autoheader
AUTOMAKE = ${SHELL} /cygdrive/e/mono2/missing automake-1.14
AWK = gawk
BREAKPOINT = G_STMT_START { __asm__ ("int $03"); } G_STMT_END
CC = i686-pc-mingw32-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -g -D_GNU_SOURCE
CPP = i686-pc-mingw32-gcc -E
CPPFLAGS = 
CYGPATH_W = cygpath -w
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = i686-pc-mingw32-dlltool
DOLT_BASH = /usr/bin/bash
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = .exe
FGREP = /usr/bin/grep -F
GINT_TO_POINTER = ((gpointer) (v))
GNUC_NORETURN = __attribute__((__noreturn__))
GNUC_PRETTY = 
GNUC_UNUSED = __attribute__((__unused__))
GPOINTER_TO_INT = ((gint) (ptr))
GPOINTER_TO_UINT = ((guint) (ptr))
GREP = /usr/bin/grep
GSIZE = int
GSIZE_FORMAT = "u"
GUINT_TO_POINTER = ((gpointer) (v))
G_GINT32_FORMAT = "ld"
G_GINT64_FORMAT = "lld"
G_GUINT32_FORMAT = "lu"
G_GUINT64_FORMAT = "llu"
G_HAVE_ISO_VARARGS = 1
HAVE_ALLOCA_H = 0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/i686-pc-mingw32/bin/ld.exe
LDFLAGS =  -Wl,-export-dynamic
LIBICONV = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(top_builddir)/doltlibtool
LIPO = 
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBICONV = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /cygdrive/e/mono2/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/i686-pc-mingw32-nm -B
NMEDIT = 
OBJDUMP = i686-pc-mingw32-objdump
OBJEXT = o
ORDER = G_LITTLE_ENDIAN
OS = WIN32
OTOOL = 
OTOOL64 = 
PACKAGE = eglib
PACKAGE_BUGREPORT = http://bugzilla.xamarin.com/enter_bug.cgi?classification=Mono
PACKAGE_NAME = eglib
PACKAGE_STRING = eglib 0.3
PACKAGE_TARNAME = eglib
PACKAGE_URL = 
PACKAGE_VERSION = 0.3
PATHSEP = \\
PATH_SEPARATOR = :
PIDTYPE = void *
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = i686-pc-mingw32-ranlib
SEARCHSEP = ;
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = i686-pc-mingw32-strip
VERSION = 0.3
WERROR_CFLAGS = 
abs_builddir = /cygdrive/e/mono2/eglib/test
abs_srcdir = /cygdrive/e/mono2/eglib/test
abs_top_builddir = /cygdrive/e/mono2/eglib
abs_top_srcdir = /cygdrive/e/mono2/eglib
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-cygwin
build_alias = 
build_cpu = x86_64
build_os = cygwin
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = i686-pc-mingw32
host_cpu = i686
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /cygdrive/e/mono2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /cygdrive/d/Development/Tools/mono
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-mingw32
target_alias = 
target_cpu = i686
target_os = mingw32
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
EXTRA_DIST = UTF-8.txt UTF-16BE.txt UTF-16LE.txt UTF-32BE.txt UTF-32LE.txt
SOURCES = \
	test.c 		\
	test.h 		\
	tests.h 	\
	driver.c 	\
	hashtable.c 	\
	string-util.c 	\
	string.c 	\
	slist.c 	\
	sizes.c		\
	ptrarray.c 	\
	list.c		\
	array.c		\
	fake.c		\
	path.c		\
	queue.c		\
	shell.c		\
	spawn.c		\
	timer.c		\
	file.c		\
	pattern.c	\
	dir.c		\
	markup.c	\
	unicode.c	\
	utf8.c		\
	endian.c	\
	module.c	\
	memory.c

test_eglib_SOURCES = $(SOURCES)
test_eglib_CFLAGS = -Wall -DEGLIB_TESTS=1 -D_FORTIFY_SOURCE=2 -I$(srcdir)/../src -I../src -DDRIVER_NAME=\"EGlib\"
test_eglib_LDADD = ../src/libeglib.la $(LIBICONV)
MAINTAINERCLEANFILES = Makefile.in
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test-eglib$(EXEEXT): $(test_eglib_OBJECTS) $(test_eglib_DEPENDENCIES) $(EXTRA_test_eglib_DEPENDENCIES) 
	@rm -f test-eglib$(EXEEXT)
	$(AM_V_CCLD)$(test_eglib_LINK) $(test_eglib_OBJECTS) $(test_eglib_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/test_eglib-array.Po
include ./$(DEPDIR)/test_eglib-dir.Po
include ./$(DEPDIR)/test_eglib-driver.Po
include ./$(DEPDIR)/test_eglib-endian.Po
include ./$(DEPDIR)/test_eglib-fake.Po
include ./$(DEPDIR)/test_eglib-file.Po
include ./$(DEPDIR)/test_eglib-hashtable.Po
include ./$(DEPDIR)/test_eglib-list.Po
include ./$(DEPDIR)/test_eglib-markup.Po
include ./$(DEPDIR)/test_eglib-memory.Po
include ./$(DEPDIR)/test_eglib-module.Po
include ./$(DEPDIR)/test_eglib-path.Po
include ./$(DEPDIR)/test_eglib-pattern.Po
include ./$(DEPDIR)/test_eglib-ptrarray.Po
include ./$(DEPDIR)/test_eglib-queue.Po
include ./$(DEPDIR)/test_eglib-shell.Po
include ./$(DEPDIR)/test_eglib-sizes.Po
include ./$(DEPDIR)/test_eglib-slist.Po
include ./$(DEPDIR)/test_eglib-spawn.Po
include ./$(DEPDIR)/test_eglib-string-util.Po
include ./$(DEPDIR)/test_eglib-string.Po
include ./$(DEPDIR)/test_eglib-test.Po
include ./$(DEPDIR)/test_eglib-timer.Po
include ./$(DEPDIR)/test_eglib-unicode.Po
include ./$(DEPDIR)/test_eglib-utf8.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

test_eglib-test.o: test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-test.o -MD -MP -MF $(DEPDIR)/test_eglib-test.Tpo -c -o test_eglib-test.o `test -f 'test.c' || echo '$(srcdir)/'`test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-test.Tpo $(DEPDIR)/test_eglib-test.Po
#	$(AM_V_CC)source='test.c' object='test_eglib-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-test.o `test -f 'test.c' || echo '$(srcdir)/'`test.c

test_eglib-test.obj: test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-test.obj -MD -MP -MF $(DEPDIR)/test_eglib-test.Tpo -c -o test_eglib-test.obj `if test -f 'test.c'; then $(CYGPATH_W) 'test.c'; else $(CYGPATH_W) '$(srcdir)/test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-test.Tpo $(DEPDIR)/test_eglib-test.Po
#	$(AM_V_CC)source='test.c' object='test_eglib-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-test.obj `if test -f 'test.c'; then $(CYGPATH_W) 'test.c'; else $(CYGPATH_W) '$(srcdir)/test.c'; fi`

test_eglib-driver.o: driver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-driver.o -MD -MP -MF $(DEPDIR)/test_eglib-driver.Tpo -c -o test_eglib-driver.o `test -f 'driver.c' || echo '$(srcdir)/'`driver.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-driver.Tpo $(DEPDIR)/test_eglib-driver.Po
#	$(AM_V_CC)source='driver.c' object='test_eglib-driver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-driver.o `test -f 'driver.c' || echo '$(srcdir)/'`driver.c

test_eglib-driver.obj: driver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-driver.obj -MD -MP -MF $(DEPDIR)/test_eglib-driver.Tpo -c -o test_eglib-driver.obj `if test -f 'driver.c'; then $(CYGPATH_W) 'driver.c'; else $(CYGPATH_W) '$(srcdir)/driver.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-driver.Tpo $(DEPDIR)/test_eglib-driver.Po
#	$(AM_V_CC)source='driver.c' object='test_eglib-driver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-driver.obj `if test -f 'driver.c'; then $(CYGPATH_W) 'driver.c'; else $(CYGPATH_W) '$(srcdir)/driver.c'; fi`

test_eglib-hashtable.o: hashtable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-hashtable.o -MD -MP -MF $(DEPDIR)/test_eglib-hashtable.Tpo -c -o test_eglib-hashtable.o `test -f 'hashtable.c' || echo '$(srcdir)/'`hashtable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-hashtable.Tpo $(DEPDIR)/test_eglib-hashtable.Po
#	$(AM_V_CC)source='hashtable.c' object='test_eglib-hashtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-hashtable.o `test -f 'hashtable.c' || echo '$(srcdir)/'`hashtable.c

test_eglib-hashtable.obj: hashtable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-hashtable.obj -MD -MP -MF $(DEPDIR)/test_eglib-hashtable.Tpo -c -o test_eglib-hashtable.obj `if test -f 'hashtable.c'; then $(CYGPATH_W) 'hashtable.c'; else $(CYGPATH_W) '$(srcdir)/hashtable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-hashtable.Tpo $(DEPDIR)/test_eglib-hashtable.Po
#	$(AM_V_CC)source='hashtable.c' object='test_eglib-hashtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-hashtable.obj `if test -f 'hashtable.c'; then $(CYGPATH_W) 'hashtable.c'; else $(CYGPATH_W) '$(srcdir)/hashtable.c'; fi`

test_eglib-string-util.o: string-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-string-util.o -MD -MP -MF $(DEPDIR)/test_eglib-string-util.Tpo -c -o test_eglib-string-util.o `test -f 'string-util.c' || echo '$(srcdir)/'`string-util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-string-util.Tpo $(DEPDIR)/test_eglib-string-util.Po
#	$(AM_V_CC)source='string-util.c' object='test_eglib-string-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-string-util.o `test -f 'string-util.c' || echo '$(srcdir)/'`string-util.c

test_eglib-string-util.obj: string-util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-string-util.obj -MD -MP -MF $(DEPDIR)/test_eglib-string-util.Tpo -c -o test_eglib-string-util.obj `if test -f 'string-util.c'; then $(CYGPATH_W) 'string-util.c'; else $(CYGPATH_W) '$(srcdir)/string-util.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-string-util.Tpo $(DEPDIR)/test_eglib-string-util.Po
#	$(AM_V_CC)source='string-util.c' object='test_eglib-string-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-string-util.obj `if test -f 'string-util.c'; then $(CYGPATH_W) 'string-util.c'; else $(CYGPATH_W) '$(srcdir)/string-util.c'; fi`

test_eglib-string.o: string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-string.o -MD -MP -MF $(DEPDIR)/test_eglib-string.Tpo -c -o test_eglib-string.o `test -f 'string.c' || echo '$(srcdir)/'`string.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-string.Tpo $(DEPDIR)/test_eglib-string.Po
#	$(AM_V_CC)source='string.c' object='test_eglib-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-string.o `test -f 'string.c' || echo '$(srcdir)/'`string.c

test_eglib-string.obj: string.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-string.obj -MD -MP -MF $(DEPDIR)/test_eglib-string.Tpo -c -o test_eglib-string.obj `if test -f 'string.c'; then $(CYGPATH_W) 'string.c'; else $(CYGPATH_W) '$(srcdir)/string.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-string.Tpo $(DEPDIR)/test_eglib-string.Po
#	$(AM_V_CC)source='string.c' object='test_eglib-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-string.obj `if test -f 'string.c'; then $(CYGPATH_W) 'string.c'; else $(CYGPATH_W) '$(srcdir)/string.c'; fi`

test_eglib-slist.o: slist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-slist.o -MD -MP -MF $(DEPDIR)/test_eglib-slist.Tpo -c -o test_eglib-slist.o `test -f 'slist.c' || echo '$(srcdir)/'`slist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-slist.Tpo $(DEPDIR)/test_eglib-slist.Po
#	$(AM_V_CC)source='slist.c' object='test_eglib-slist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-slist.o `test -f 'slist.c' || echo '$(srcdir)/'`slist.c

test_eglib-slist.obj: slist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-slist.obj -MD -MP -MF $(DEPDIR)/test_eglib-slist.Tpo -c -o test_eglib-slist.obj `if test -f 'slist.c'; then $(CYGPATH_W) 'slist.c'; else $(CYGPATH_W) '$(srcdir)/slist.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-slist.Tpo $(DEPDIR)/test_eglib-slist.Po
#	$(AM_V_CC)source='slist.c' object='test_eglib-slist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-slist.obj `if test -f 'slist.c'; then $(CYGPATH_W) 'slist.c'; else $(CYGPATH_W) '$(srcdir)/slist.c'; fi`

test_eglib-sizes.o: sizes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-sizes.o -MD -MP -MF $(DEPDIR)/test_eglib-sizes.Tpo -c -o test_eglib-sizes.o `test -f 'sizes.c' || echo '$(srcdir)/'`sizes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-sizes.Tpo $(DEPDIR)/test_eglib-sizes.Po
#	$(AM_V_CC)source='sizes.c' object='test_eglib-sizes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-sizes.o `test -f 'sizes.c' || echo '$(srcdir)/'`sizes.c

test_eglib-sizes.obj: sizes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-sizes.obj -MD -MP -MF $(DEPDIR)/test_eglib-sizes.Tpo -c -o test_eglib-sizes.obj `if test -f 'sizes.c'; then $(CYGPATH_W) 'sizes.c'; else $(CYGPATH_W) '$(srcdir)/sizes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-sizes.Tpo $(DEPDIR)/test_eglib-sizes.Po
#	$(AM_V_CC)source='sizes.c' object='test_eglib-sizes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-sizes.obj `if test -f 'sizes.c'; then $(CYGPATH_W) 'sizes.c'; else $(CYGPATH_W) '$(srcdir)/sizes.c'; fi`

test_eglib-ptrarray.o: ptrarray.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-ptrarray.o -MD -MP -MF $(DEPDIR)/test_eglib-ptrarray.Tpo -c -o test_eglib-ptrarray.o `test -f 'ptrarray.c' || echo '$(srcdir)/'`ptrarray.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-ptrarray.Tpo $(DEPDIR)/test_eglib-ptrarray.Po
#	$(AM_V_CC)source='ptrarray.c' object='test_eglib-ptrarray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-ptrarray.o `test -f 'ptrarray.c' || echo '$(srcdir)/'`ptrarray.c

test_eglib-ptrarray.obj: ptrarray.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-ptrarray.obj -MD -MP -MF $(DEPDIR)/test_eglib-ptrarray.Tpo -c -o test_eglib-ptrarray.obj `if test -f 'ptrarray.c'; then $(CYGPATH_W) 'ptrarray.c'; else $(CYGPATH_W) '$(srcdir)/ptrarray.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-ptrarray.Tpo $(DEPDIR)/test_eglib-ptrarray.Po
#	$(AM_V_CC)source='ptrarray.c' object='test_eglib-ptrarray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-ptrarray.obj `if test -f 'ptrarray.c'; then $(CYGPATH_W) 'ptrarray.c'; else $(CYGPATH_W) '$(srcdir)/ptrarray.c'; fi`

test_eglib-list.o: list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-list.o -MD -MP -MF $(DEPDIR)/test_eglib-list.Tpo -c -o test_eglib-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-list.Tpo $(DEPDIR)/test_eglib-list.Po
#	$(AM_V_CC)source='list.c' object='test_eglib-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c

test_eglib-list.obj: list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-list.obj -MD -MP -MF $(DEPDIR)/test_eglib-list.Tpo -c -o test_eglib-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-list.Tpo $(DEPDIR)/test_eglib-list.Po
#	$(AM_V_CC)source='list.c' object='test_eglib-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`

test_eglib-array.o: array.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-array.o -MD -MP -MF $(DEPDIR)/test_eglib-array.Tpo -c -o test_eglib-array.o `test -f 'array.c' || echo '$(srcdir)/'`array.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-array.Tpo $(DEPDIR)/test_eglib-array.Po
#	$(AM_V_CC)source='array.c' object='test_eglib-array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-array.o `test -f 'array.c' || echo '$(srcdir)/'`array.c

test_eglib-array.obj: array.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-array.obj -MD -MP -MF $(DEPDIR)/test_eglib-array.Tpo -c -o test_eglib-array.obj `if test -f 'array.c'; then $(CYGPATH_W) 'array.c'; else $(CYGPATH_W) '$(srcdir)/array.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-array.Tpo $(DEPDIR)/test_eglib-array.Po
#	$(AM_V_CC)source='array.c' object='test_eglib-array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-array.obj `if test -f 'array.c'; then $(CYGPATH_W) 'array.c'; else $(CYGPATH_W) '$(srcdir)/array.c'; fi`

test_eglib-fake.o: fake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-fake.o -MD -MP -MF $(DEPDIR)/test_eglib-fake.Tpo -c -o test_eglib-fake.o `test -f 'fake.c' || echo '$(srcdir)/'`fake.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-fake.Tpo $(DEPDIR)/test_eglib-fake.Po
#	$(AM_V_CC)source='fake.c' object='test_eglib-fake.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-fake.o `test -f 'fake.c' || echo '$(srcdir)/'`fake.c

test_eglib-fake.obj: fake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-fake.obj -MD -MP -MF $(DEPDIR)/test_eglib-fake.Tpo -c -o test_eglib-fake.obj `if test -f 'fake.c'; then $(CYGPATH_W) 'fake.c'; else $(CYGPATH_W) '$(srcdir)/fake.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-fake.Tpo $(DEPDIR)/test_eglib-fake.Po
#	$(AM_V_CC)source='fake.c' object='test_eglib-fake.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-fake.obj `if test -f 'fake.c'; then $(CYGPATH_W) 'fake.c'; else $(CYGPATH_W) '$(srcdir)/fake.c'; fi`

test_eglib-path.o: path.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-path.o -MD -MP -MF $(DEPDIR)/test_eglib-path.Tpo -c -o test_eglib-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-path.Tpo $(DEPDIR)/test_eglib-path.Po
#	$(AM_V_CC)source='path.c' object='test_eglib-path.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c

test_eglib-path.obj: path.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-path.obj -MD -MP -MF $(DEPDIR)/test_eglib-path.Tpo -c -o test_eglib-path.obj `if test -f 'path.c'; then $(CYGPATH_W) 'path.c'; else $(CYGPATH_W) '$(srcdir)/path.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-path.Tpo $(DEPDIR)/test_eglib-path.Po
#	$(AM_V_CC)source='path.c' object='test_eglib-path.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-path.obj `if test -f 'path.c'; then $(CYGPATH_W) 'path.c'; else $(CYGPATH_W) '$(srcdir)/path.c'; fi`

test_eglib-queue.o: queue.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-queue.o -MD -MP -MF $(DEPDIR)/test_eglib-queue.Tpo -c -o test_eglib-queue.o `test -f 'queue.c' || echo '$(srcdir)/'`queue.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-queue.Tpo $(DEPDIR)/test_eglib-queue.Po
#	$(AM_V_CC)source='queue.c' object='test_eglib-queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-queue.o `test -f 'queue.c' || echo '$(srcdir)/'`queue.c

test_eglib-queue.obj: queue.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-queue.obj -MD -MP -MF $(DEPDIR)/test_eglib-queue.Tpo -c -o test_eglib-queue.obj `if test -f 'queue.c'; then $(CYGPATH_W) 'queue.c'; else $(CYGPATH_W) '$(srcdir)/queue.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-queue.Tpo $(DEPDIR)/test_eglib-queue.Po
#	$(AM_V_CC)source='queue.c' object='test_eglib-queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-queue.obj `if test -f 'queue.c'; then $(CYGPATH_W) 'queue.c'; else $(CYGPATH_W) '$(srcdir)/queue.c'; fi`

test_eglib-shell.o: shell.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-shell.o -MD -MP -MF $(DEPDIR)/test_eglib-shell.Tpo -c -o test_eglib-shell.o `test -f 'shell.c' || echo '$(srcdir)/'`shell.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-shell.Tpo $(DEPDIR)/test_eglib-shell.Po
#	$(AM_V_CC)source='shell.c' object='test_eglib-shell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-shell.o `test -f 'shell.c' || echo '$(srcdir)/'`shell.c

test_eglib-shell.obj: shell.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-shell.obj -MD -MP -MF $(DEPDIR)/test_eglib-shell.Tpo -c -o test_eglib-shell.obj `if test -f 'shell.c'; then $(CYGPATH_W) 'shell.c'; else $(CYGPATH_W) '$(srcdir)/shell.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-shell.Tpo $(DEPDIR)/test_eglib-shell.Po
#	$(AM_V_CC)source='shell.c' object='test_eglib-shell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-shell.obj `if test -f 'shell.c'; then $(CYGPATH_W) 'shell.c'; else $(CYGPATH_W) '$(srcdir)/shell.c'; fi`

test_eglib-spawn.o: spawn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-spawn.o -MD -MP -MF $(DEPDIR)/test_eglib-spawn.Tpo -c -o test_eglib-spawn.o `test -f 'spawn.c' || echo '$(srcdir)/'`spawn.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-spawn.Tpo $(DEPDIR)/test_eglib-spawn.Po
#	$(AM_V_CC)source='spawn.c' object='test_eglib-spawn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-spawn.o `test -f 'spawn.c' || echo '$(srcdir)/'`spawn.c

test_eglib-spawn.obj: spawn.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-spawn.obj -MD -MP -MF $(DEPDIR)/test_eglib-spawn.Tpo -c -o test_eglib-spawn.obj `if test -f 'spawn.c'; then $(CYGPATH_W) 'spawn.c'; else $(CYGPATH_W) '$(srcdir)/spawn.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-spawn.Tpo $(DEPDIR)/test_eglib-spawn.Po
#	$(AM_V_CC)source='spawn.c' object='test_eglib-spawn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-spawn.obj `if test -f 'spawn.c'; then $(CYGPATH_W) 'spawn.c'; else $(CYGPATH_W) '$(srcdir)/spawn.c'; fi`

test_eglib-timer.o: timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-timer.o -MD -MP -MF $(DEPDIR)/test_eglib-timer.Tpo -c -o test_eglib-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-timer.Tpo $(DEPDIR)/test_eglib-timer.Po
#	$(AM_V_CC)source='timer.c' object='test_eglib-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c

test_eglib-timer.obj: timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-timer.obj -MD -MP -MF $(DEPDIR)/test_eglib-timer.Tpo -c -o test_eglib-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-timer.Tpo $(DEPDIR)/test_eglib-timer.Po
#	$(AM_V_CC)source='timer.c' object='test_eglib-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`

test_eglib-file.o: file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-file.o -MD -MP -MF $(DEPDIR)/test_eglib-file.Tpo -c -o test_eglib-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-file.Tpo $(DEPDIR)/test_eglib-file.Po
#	$(AM_V_CC)source='file.c' object='test_eglib-file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c

test_eglib-file.obj: file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-file.obj -MD -MP -MF $(DEPDIR)/test_eglib-file.Tpo -c -o test_eglib-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-file.Tpo $(DEPDIR)/test_eglib-file.Po
#	$(AM_V_CC)source='file.c' object='test_eglib-file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`

test_eglib-pattern.o: pattern.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-pattern.o -MD -MP -MF $(DEPDIR)/test_eglib-pattern.Tpo -c -o test_eglib-pattern.o `test -f 'pattern.c' || echo '$(srcdir)/'`pattern.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-pattern.Tpo $(DEPDIR)/test_eglib-pattern.Po
#	$(AM_V_CC)source='pattern.c' object='test_eglib-pattern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-pattern.o `test -f 'pattern.c' || echo '$(srcdir)/'`pattern.c

test_eglib-pattern.obj: pattern.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-pattern.obj -MD -MP -MF $(DEPDIR)/test_eglib-pattern.Tpo -c -o test_eglib-pattern.obj `if test -f 'pattern.c'; then $(CYGPATH_W) 'pattern.c'; else $(CYGPATH_W) '$(srcdir)/pattern.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-pattern.Tpo $(DEPDIR)/test_eglib-pattern.Po
#	$(AM_V_CC)source='pattern.c' object='test_eglib-pattern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-pattern.obj `if test -f 'pattern.c'; then $(CYGPATH_W) 'pattern.c'; else $(CYGPATH_W) '$(srcdir)/pattern.c'; fi`

test_eglib-dir.o: dir.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-dir.o -MD -MP -MF $(DEPDIR)/test_eglib-dir.Tpo -c -o test_eglib-dir.o `test -f 'dir.c' || echo '$(srcdir)/'`dir.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-dir.Tpo $(DEPDIR)/test_eglib-dir.Po
#	$(AM_V_CC)source='dir.c' object='test_eglib-dir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-dir.o `test -f 'dir.c' || echo '$(srcdir)/'`dir.c

test_eglib-dir.obj: dir.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-dir.obj -MD -MP -MF $(DEPDIR)/test_eglib-dir.Tpo -c -o test_eglib-dir.obj `if test -f 'dir.c'; then $(CYGPATH_W) 'dir.c'; else $(CYGPATH_W) '$(srcdir)/dir.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-dir.Tpo $(DEPDIR)/test_eglib-dir.Po
#	$(AM_V_CC)source='dir.c' object='test_eglib-dir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-dir.obj `if test -f 'dir.c'; then $(CYGPATH_W) 'dir.c'; else $(CYGPATH_W) '$(srcdir)/dir.c'; fi`

test_eglib-markup.o: markup.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-markup.o -MD -MP -MF $(DEPDIR)/test_eglib-markup.Tpo -c -o test_eglib-markup.o `test -f 'markup.c' || echo '$(srcdir)/'`markup.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-markup.Tpo $(DEPDIR)/test_eglib-markup.Po
#	$(AM_V_CC)source='markup.c' object='test_eglib-markup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-markup.o `test -f 'markup.c' || echo '$(srcdir)/'`markup.c

test_eglib-markup.obj: markup.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-markup.obj -MD -MP -MF $(DEPDIR)/test_eglib-markup.Tpo -c -o test_eglib-markup.obj `if test -f 'markup.c'; then $(CYGPATH_W) 'markup.c'; else $(CYGPATH_W) '$(srcdir)/markup.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-markup.Tpo $(DEPDIR)/test_eglib-markup.Po
#	$(AM_V_CC)source='markup.c' object='test_eglib-markup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-markup.obj `if test -f 'markup.c'; then $(CYGPATH_W) 'markup.c'; else $(CYGPATH_W) '$(srcdir)/markup.c'; fi`

test_eglib-unicode.o: unicode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-unicode.o -MD -MP -MF $(DEPDIR)/test_eglib-unicode.Tpo -c -o test_eglib-unicode.o `test -f 'unicode.c' || echo '$(srcdir)/'`unicode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-unicode.Tpo $(DEPDIR)/test_eglib-unicode.Po
#	$(AM_V_CC)source='unicode.c' object='test_eglib-unicode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-unicode.o `test -f 'unicode.c' || echo '$(srcdir)/'`unicode.c

test_eglib-unicode.obj: unicode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-unicode.obj -MD -MP -MF $(DEPDIR)/test_eglib-unicode.Tpo -c -o test_eglib-unicode.obj `if test -f 'unicode.c'; then $(CYGPATH_W) 'unicode.c'; else $(CYGPATH_W) '$(srcdir)/unicode.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-unicode.Tpo $(DEPDIR)/test_eglib-unicode.Po
#	$(AM_V_CC)source='unicode.c' object='test_eglib-unicode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-unicode.obj `if test -f 'unicode.c'; then $(CYGPATH_W) 'unicode.c'; else $(CYGPATH_W) '$(srcdir)/unicode.c'; fi`

test_eglib-utf8.o: utf8.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-utf8.o -MD -MP -MF $(DEPDIR)/test_eglib-utf8.Tpo -c -o test_eglib-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-utf8.Tpo $(DEPDIR)/test_eglib-utf8.Po
#	$(AM_V_CC)source='utf8.c' object='test_eglib-utf8.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c

test_eglib-utf8.obj: utf8.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-utf8.obj -MD -MP -MF $(DEPDIR)/test_eglib-utf8.Tpo -c -o test_eglib-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-utf8.Tpo $(DEPDIR)/test_eglib-utf8.Po
#	$(AM_V_CC)source='utf8.c' object='test_eglib-utf8.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`

test_eglib-endian.o: endian.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-endian.o -MD -MP -MF $(DEPDIR)/test_eglib-endian.Tpo -c -o test_eglib-endian.o `test -f 'endian.c' || echo '$(srcdir)/'`endian.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-endian.Tpo $(DEPDIR)/test_eglib-endian.Po
#	$(AM_V_CC)source='endian.c' object='test_eglib-endian.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-endian.o `test -f 'endian.c' || echo '$(srcdir)/'`endian.c

test_eglib-endian.obj: endian.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-endian.obj -MD -MP -MF $(DEPDIR)/test_eglib-endian.Tpo -c -o test_eglib-endian.obj `if test -f 'endian.c'; then $(CYGPATH_W) 'endian.c'; else $(CYGPATH_W) '$(srcdir)/endian.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-endian.Tpo $(DEPDIR)/test_eglib-endian.Po
#	$(AM_V_CC)source='endian.c' object='test_eglib-endian.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-endian.obj `if test -f 'endian.c'; then $(CYGPATH_W) 'endian.c'; else $(CYGPATH_W) '$(srcdir)/endian.c'; fi`

test_eglib-module.o: module.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-module.o -MD -MP -MF $(DEPDIR)/test_eglib-module.Tpo -c -o test_eglib-module.o `test -f 'module.c' || echo '$(srcdir)/'`module.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-module.Tpo $(DEPDIR)/test_eglib-module.Po
#	$(AM_V_CC)source='module.c' object='test_eglib-module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-module.o `test -f 'module.c' || echo '$(srcdir)/'`module.c

test_eglib-module.obj: module.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-module.obj -MD -MP -MF $(DEPDIR)/test_eglib-module.Tpo -c -o test_eglib-module.obj `if test -f 'module.c'; then $(CYGPATH_W) 'module.c'; else $(CYGPATH_W) '$(srcdir)/module.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-module.Tpo $(DEPDIR)/test_eglib-module.Po
#	$(AM_V_CC)source='module.c' object='test_eglib-module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-module.obj `if test -f 'module.c'; then $(CYGPATH_W) 'module.c'; else $(CYGPATH_W) '$(srcdir)/module.c'; fi`

test_eglib-memory.o: memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-memory.o -MD -MP -MF $(DEPDIR)/test_eglib-memory.Tpo -c -o test_eglib-memory.o `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-memory.Tpo $(DEPDIR)/test_eglib-memory.Po
#	$(AM_V_CC)source='memory.c' object='test_eglib-memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-memory.o `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

test_eglib-memory.obj: memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -MT test_eglib-memory.obj -MD -MP -MF $(DEPDIR)/test_eglib-memory.Tpo -c -o test_eglib-memory.obj `if test -f 'memory.c'; then $(CYGPATH_W) 'memory.c'; else $(CYGPATH_W) '$(srcdir)/memory.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_eglib-memory.Tpo $(DEPDIR)/test_eglib-memory.Po
#	$(AM_V_CC)source='memory.c' object='test_eglib-memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_eglib_CFLAGS) $(CFLAGS) -c -o test_eglib-memory.obj `if test -f 'memory.c'; then $(CYGPATH_W) 'memory.c'; else $(CYGPATH_W) '$(srcdir)/memory.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


run-eglib: all
	srcdir=`readlink -f $(srcdir)` ./test-eglib

run-both: run-eglib

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
